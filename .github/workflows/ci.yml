name: ci

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:  
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [ '3.8', '3.9', '3.10' ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Display Python version
        run: python --version
      - uses: FedericoCarboni/setup-ffmpeg@v1
        id: setup-ffmpeg
      - run: pip install -r requirements.txt
      - run: pytest

  pylint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
          cache: 'pip'
      - name: Display Python version
        run: python --version
      - run: pip install -r requirements.txt
      - run: pylint *.py
        shell: bash

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
          cache: 'pip'
      - name: Display Python version
        run: python --version
      - uses: FedericoCarboni/setup-ffmpeg@v1
        id: setup-ffmpeg
      - run: pip install -r requirements.txt
      - run: pip install coverage pytest
      - run: coverage run -m pytest
        shell: bash
      - run: python -m pip install --upgrade --disable-pip-version-check coveralls
      - run: coverage xml
      - uses: codecov/codecov-action@v2
        with:
          files: ./coverage.xml
          name: unittest
          fail_ci_if_error: true
          verbose: true
          if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.8'

